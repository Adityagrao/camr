#generated by model.py
from constants import *
def generate_features(state,action):
    s0,b0,a0=state.get_feature_context_window(action)
    feats=[]
    act_idx = state.model.class_codebook.get_index(action['type'])
    tx = action['tag'] if 'tag' in action else EMPTY
    s0_ne=s0['ne'] if s0 else EMPTY
    s0_w=s0['form'] if s0 else EMPTY
    s0_lemma=s0['lemma'] if s0 else EMPTY
    s0_t=s0['pos'] if s0 else EMPTY
    s0_dl=s0['rel'] if s0 else EMPTY
    s0_len=s0['len'] if s0 else EMPTY
    b0_ne=b0['ne'] if b0 else EMPTY
    b0_w=b0['form'] if b0 else EMPTY
    b0_lemma=b0['lemma'] if b0 else EMPTY
    b0_t=b0['pos'] if b0 else EMPTY
    b0_dl=b0['rel'] if b0 else EMPTY
    b0_len=b0['len'] if b0 else EMPTY
    b0_reph=b0['reph'] if b0 else EMPTY
    a0_ne=a0['ne'] if a0 else EMPTY
    a0_w=a0['form'] if a0 else EMPTY
    a0_lemma=a0['lemma'] if a0 else EMPTY
    a0_t=a0['pos'] if a0 else EMPTY
    a0_dl=a0['rel'] if a0 else EMPTY
    s0_p1_ne=s0['p1']['ne'] if s0 and s0['p1'] else EMPTY
    s0_p1_w=s0['p1']['form'] if s0 and s0['p1'] else EMPTY
    s0_p1_lemma=s0['p1']['lemma'] if s0 and s0['p1'] else EMPTY
    s0_p1_t=s0['p1']['pos'] if s0 and s0['p1'] else EMPTY
    s0_p1_dl=s0['p1']['rel'] if s0 and s0['p1'] else EMPTY
    b0_pathpwd=b0['pathpwd'] if b0 else EMPTY
    b0_apathpwd=b0['apathpwd'] if b0 else EMPTY
    b0_rsb_dl=b0['rsb']['rel'] if b0 and b0['rsb'] else EMPTY
    b0_nswp=b0['nswp'] if b0 else EMPTY
    b0_pathp=b0['pathp'] if b0 else EMPTY
    b0_apathp=b0['apathp'] if b0 else EMPTY
    dist1=abs(s0['id']-b0['id']) if b0 else EMPTY
    if dist1 > 10: dist1=10
    dist2=abs(a0['id']-b0['id']) if b0 and a0 else EMPTY
    if dist2 > 10: dist2=10
    feats.append('s0_ne&tx=%s_%s_' % (s0_ne,tx))
    feats.append('s0_w&tx=%s_%s_' % (s0_w,tx))
    feats.append('s0_lemma&tx=%s_%s_' % (s0_lemma,tx))
    feats.append('s0_t&tx=%s_%s_' % (s0_t,tx))
    feats.append('s0_dl&tx=%s_%s_' % (s0_dl,tx))
    feats.append('s0_len&tx=%s_%s_' % (s0_len,tx))
    feats.append('b0_ne&tx=%s_%s_' % (b0_ne,tx))
    feats.append('b0_w&tx=%s_%s_' % (b0_w,tx))
    feats.append('b0_lemma&tx=%s_%s_' % (b0_lemma,tx))
    feats.append('b0_t&tx=%s_%s_' % (b0_t,tx))
    feats.append('b0_dl&tx=%s_%s_' % (b0_dl,tx))
    feats.append('b0_len&tx=%s_%s_' % (b0_len,tx))
    feats.append('b0_reph&tx=%s_%s_' % (b0_reph,tx))
    feats.append('a0_ne&tx=%s_%s_' % (a0_ne,tx))
    feats.append('a0_w&tx=%s_%s_' % (a0_w,tx))
    feats.append('a0_lemma&tx=%s_%s_' % (a0_lemma,tx))
    feats.append('a0_t&tx=%s_%s_' % (a0_t,tx))
    feats.append('a0_dl&tx=%s_%s_' % (a0_dl,tx))
    feats.append('s0_p1_ne&tx=%s_%s_' % (s0_p1_ne,tx))
    feats.append('s0_p1_w&tx=%s_%s_' % (s0_p1_w,tx))
    feats.append('s0_p1_lemma&tx=%s_%s_' % (s0_p1_lemma,tx))
    feats.append('s0_p1_t&tx=%s_%s_' % (s0_p1_t,tx))
    feats.append('s0_p1_dl&tx=%s_%s_' % (s0_p1_dl,tx))
    feats.append('b0_pathpwd&b0_lemma&s0_lemma&tx=%s_%s_%s_%s_' % (b0_pathpwd,b0_lemma,s0_lemma,tx))
    feats.append('b0_apathpwd&a0_lemma&b0_lemma&tx=%s_%s_%s_%s_' % (b0_apathpwd,a0_lemma,b0_lemma,tx))
    feats.append('b0_lemma&b0_rsb_dl&tx=%s_%s_%s_' % (b0_lemma,b0_rsb_dl,tx))
    feats.append('b0_lemma&b0_nswp&tx=%s_%s_%s_' % (b0_lemma,b0_nswp,tx))
    feats.append('dist1&tx=%s_%s_' % (dist1,tx))
    feats.append('dist1&b0_pathp&tx=%s_%s_%s_' % (dist1,b0_pathp,tx))
    feats.append('dist2&tx=%s_%s_' % (dist2,tx))
    feats.append('dist2&b0_apathp&tx=%s_%s_%s_' % (dist2,b0_apathp,tx))
    feats.append('s0_lemma&b0_t&tx=%s_%s_%s_' % (s0_lemma,b0_t,tx))
    feats.append('s0_lemma&b0_dl&tx=%s_%s_%s_' % (s0_lemma,b0_dl,tx))
    feats.append('s0_t&b0_lemma&tx=%s_%s_%s_' % (s0_t,b0_lemma,tx))
    feats.append('s0_dl&b0_lemma&tx=%s_%s_%s_' % (s0_dl,b0_lemma,tx))
    feats.append('s0_ne&b0_ne&tx=%s_%s_%s_' % (s0_ne,b0_ne,tx))
    feats.append('a0_t&b0_lemma&tx=%s_%s_%s_' % (a0_t,b0_lemma,tx))
    feats.append('a0_dl&b0_lemma&tx=%s_%s_%s_' % (a0_dl,b0_lemma,tx))
    feats.append('a0_ne&b0_ne&tx=%s_%s_%s_' % (a0_ne,b0_ne,tx))
    return feats